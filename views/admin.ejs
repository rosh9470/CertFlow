<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard - CertFlow</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <%- include('partials/header') %>
  <main class="container mt-4">
    <h1>Admin Dashboard</h1>
    <p>Review and manage document submissions below.</p>
    
    <div class="table-responsive">
      <table class="table table-bordered">
        <thead>
          <tr>
            <th>ID</th>
            <th>User</th>
            <th>Title</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% if (documents.length === 0) { %>
            <tr>
              <td colspan="5" class="text-center">No documents available</td>
            </tr>
          <% } else { %>
            <% documents.forEach(doc => { %>
              <tr>
                <td><%= doc.id %></td>
                <td><%= doc.userId %></td>
                <td><%= doc.title %></td>
                <td>
                  <span class="badge <%= doc.status === 'approved' ? 'bg-success' : (doc.status === 'rejected' ? 'bg-danger' : 'bg-warning') %>">
                    <%= doc.status.charAt(0).toUpperCase() + doc.status.slice(1) %>
                  </span>
                </td>
                <td>
                  <!-- View Document Button -->
                  <% if (doc.fileUrl) { %>
                    <a href="<%= doc.fileUrl %>" target="_blank" class="btn btn-sm btn-secondary me-2">
                      View Document
                    </a>
                  <% } else { %>
                    <span class="text-muted me-2">No File</span>
                  <% } %>
                  
                  <!-- Download Certificate Button (if available) -->
                  <% if (doc.certificateUrl) { %>
                    <a href="/documents/<%= doc.id %>/certificate" target="_blank" class="btn btn-sm btn-info me-2">
                      Download Certificate
                    </a>
                  <% } else { %>
                    <span class="text-muted me-2">No Certificate</span>
                  <% } %>
                  
                  <!-- Action Buttons for Pending Documents -->
                  <% if (doc.status === 'pending') { %>
                    <button class="btn btn-sm btn-success me-1" onclick="openCertificateModal(<%= doc.id %>)">
                      Approve & Customize
                    </button>
                    <button class="btn btn-sm btn-warning me-1" onclick="openRequestModal(<%= doc.id %>)">
                      Request More
                    </button>
                    <button class="btn btn-sm btn-danger" onclick="updateStatus(<%= doc.id %>, 'rejected')">
                      Reject
                    </button>
                  <% } else if (doc.status === 'needs_info') { %>
                      <small class="text-muted">Info Requested</small>
                  <% } else { %>
                    <small>N/A</small>
                  <% } %>
                </td>
              </tr>
            <% }); %>
          <% } %>
        </tbody>
      </table>
    </div>
  </main>
  
  <!-- Certificate Customization Modal -->
  <div class="modal fade" id="certificateModal" tabindex="-1" aria-labelledby="certificateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="certificateModalLabel">Customize Certificate</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="certificate-form">
            <div class="mb-3">
              <label for="businessName" class="form-label">Business Name</label>
              <input type="text" class="form-control" id="businessName" name="businessName" placeholder="Enter Business Name" required>
            </div>
            <!-- You can add more custom fields here as needed -->
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="generateCertBtn">Generate Certificate</button>
        </div>
      </div>
    </div>
  </div>

  <div class="modal fade" id="requestModal" tabindex="-1" aria-labelledby="requestModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="requestModalLabel">Request Additional Documents</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <textarea id="requestNotes" class="form-control" rows="4"
                    placeholder="Please specify what additional documents are required…" required></textarea>
        </div>
        <div class="modal-footer">
          <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button class="btn btn-warning" id="sendRequestBtn">Send Request</button>
        </div>
      </div>
    </div>
  </div>
  
  <%- include('partials/footer') %>
  
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/js/main.js"></script>
  <script>
    let currentDocId = null; // To hold the ID of the doc being approved

    // Open the modal to customize certificate details
    function openCertificateModal(docId) {
      currentDocId = docId;
      // Optionally, pre-fill form fields with document info (if needed)
      const certModal = new bootstrap.Modal(document.getElementById('certificateModal'));
      certModal.show();
    }

    // Generate certificate after custom details are provided
    document.getElementById('generateCertBtn').addEventListener('click', async () => {
      const businessName = document.getElementById('businessName').value;
      if (!currentDocId || !businessName.trim()) {
        alert('Please enter a Business Name.');
        return;
      }
      try {
        const response = await fetch(`/documents/${currentDocId}/status`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status: 'approved', businessName })
        });
        const data = await response.json();
        if (data.success) {
          // Close modal and reload the page with updated data
          const modal = bootstrap.Modal.getInstance(document.getElementById('certificateModal'));
          modal.hide();
          window.location.reload();
        } else {
          alert('Failed to update: ' + data.message);
        }
      } catch (error) {
        alert('Error updating status: ' + error.message);
      }
    });

    function openRequestModal(docId) {
      requestDocId = docId;
      document.getElementById('requestNotes').value = '';
      new bootstrap.Modal(document.getElementById('requestModal')).show();
    }

    document.getElementById('sendRequestBtn').addEventListener('click', async () => {
      const notes = document.getElementById('requestNotes').value.trim();
      if (!notes) {
        return alert('Please provide details for what’s needed.');
     }

    try {
      const res = await fetch(`/documents/${requestDocId}/status`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ status: 'needs_info', notes })
      });
      const data = await res.json();
      if (data.success) {
        window.location.reload();
      } else {
        alert('Failed to send request: ' + data.message);
      }
    } catch (error) {
      console.error('Error sending request:', error);
      alert('An error occurred while sending the request.');
    }
 });

    // For a simple reject action without customization
    async function updateStatus(docId, status) {
      try {
        const response = await fetch(`/documents/${docId}/status`, {
          method: 'PUT',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ status })
        });
        const data = await response.json();
        if (data.success) {
          window.location.reload();
        } else {
          alert('Failed to update: ' + data.message);
        }
      } catch (error) {
        alert('Error updating status: ' + error.message);
      }
    }
    
    // Logout logic
    document.getElementById('logout-btn').addEventListener('click', async () => {
      try {
        await fetch('/auth/logout');
      } finally {
        localStorage.removeItem('sessionId');
        localStorage.removeItem('user');
        window.location.href = '/login';
      }
    });
  </script>
</body>
</html>
